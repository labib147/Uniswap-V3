import { KeyValueCache } from 'fetchache';
import { fetch as crossFetch } from 'cross-undici-fetch';
import isUrl from 'is-url';
import { ImportFn, Logger } from '@graphql-mesh/types';
export { isUrl };
export interface ReadFileOrUrlOptions extends RequestInit {
    allowUnknownExtensions?: boolean;
    fallbackFormat?: 'json' | 'yaml' | 'js' | 'ts';
    cwd?: string;
    fetch?: typeof crossFetch;
    importFn?: ImportFn;
    logger?: Logger;
}
export declare const getCachedFetch: (cache: KeyValueCache) => typeof crossFetch;
export declare function readFileOrUrl<T>(filePathOrUrl: string, config?: ReadFileOrUrlOptions): Promise<T>;
export declare function loadYaml(filepath: string, content: string, logger?: Logger): any;
export declare function readFile<T>(fileExpression: string, config?: ReadFileOrUrlOptions): Promise<T>;
export declare function readUrl<T>(path: string, config?: ReadFileOrUrlOptions): Promise<T>;
