import { ResolverData } from '@graphql-mesh/types';
import { GraphQLInputType } from 'graphql';
export declare type ResolverDataBasedFactory<T> = (data: ResolverData) => T;
export declare function getInterpolationKeys(...interpolationStrings: string[]): any[];
export declare function parseInterpolationStrings(interpolationStrings: string[], argTypeMap?: Record<string, string | GraphQLInputType>): {
    args: Record<string, {
        type: string | GraphQLInputType;
    }>;
    contextVariables: string[];
};
export declare function getInterpolatedStringFactory(nonInterpolatedString: string): ResolverDataBasedFactory<string>;
export declare function getInterpolatedHeadersFactory(nonInterpolatedHeaders?: Record<string, string>): ResolverDataBasedFactory<Record<string, string>>;
export declare function getHeadersObject(headers: Headers): Record<string, string>;
