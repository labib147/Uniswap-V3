{"version":3,"file":"index.cjs.js","sources":["../src/index.ts"],"sourcesContent":["/// <reference lib=\"dom\" />\nimport CachePolicy from 'http-cache-semantics';\nimport flatStr from 'flatstr';\n\nexport interface FetchacheCacheEntry {\n    policy: CachePolicy.CachePolicyObject;\n    body: string;\n}\n\ntype FetchFn = WindowOrWorkerGlobalScope['fetch'];\n\nexport interface FetchacheOptions {\n    fetch: FetchFn;\n    cache: KeyValueCache<FetchacheCacheEntry>;\n    Request: typeof Request;\n    Response: typeof Response;\n}\n\nexport function fetchFactory({\n    fetch,\n    Request,\n    Response,\n    cache\n}: FetchacheOptions): FetchFn {\n    return async (input, init) => {\n        let request: Request;\n        if (input instanceof Request) {\n            request = input;\n        } else {\n            request = new Request(input, init);\n        }\n        const cacheKey = request.url;\n        const entry = await cache.get(cacheKey);\n        if (!entry) {\n            const response = await fetch(request);\n\n            const policy = new CachePolicy(\n                policyRequestFrom(request),\n                policyResponseFrom(response),\n            );\n\n            return storeResponseAndReturnClone(\n                cache,\n                response,\n                policy,\n                cacheKey,\n            );\n        }\n\n        const { policy: policyRaw, body } = typeof entry === 'string' ? JSON.parse(entry) : entry;\n\n        const policy = CachePolicy.fromObject(policyRaw);\n        // Remove url from the policy, because otherwise it would never match a request with a custom cache key\n        (policy as any)._url = undefined;\n\n        if (policy.satisfiesWithoutRevalidation(policyRequestFrom(request))) {\n            const headers = policy.responseHeaders() as HeadersInit;\n            return new Response(flatStr(body), {\n                url: (policy as any)._url,\n                status: (policy as any)._status,\n                headers,\n            } as ResponseInit);\n        } else {\n            const revalidationHeaders = policy.revalidationHeaders(\n                policyRequestFrom(request),\n            );\n            const revalidationRequest = new Request(request, {\n                headers: revalidationHeaders as HeadersInit,\n            });\n            const revalidationResponse = await fetch(revalidationRequest);\n\n            const { policy: revalidatedPolicy, modified } = policy.revalidatedPolicy(\n                policyRequestFrom(revalidationRequest),\n                policyResponseFrom(revalidationResponse),\n            );\n\n            return storeResponseAndReturnClone(\n                cache,\n                new Response(flatStr(modified ? await revalidationResponse.text() : body), {\n                    url: (revalidatedPolicy as any)._url,\n                    status: (revalidatedPolicy as any)._status,\n                    headers: (revalidatedPolicy as any).responseHeaders(),\n                } as ResponseInit),\n                revalidatedPolicy,\n                cacheKey,\n            );\n        }\n    }\n\n    async function storeResponseAndReturnClone(\n        cache: KeyValueCache,\n        response: Response,\n        policy: CachePolicy,\n        cacheKey: string,\n    ): Promise<Response> {\n\n        let ttl = Math.round(policy.timeToLive() / 1000);\n        if (ttl <= 0) return response;\n\n        // If a response can be revalidated, we don't want to remove it from the cache right after it expires.\n        // We may be able to use better heuristics here, but for now we'll take the max-age times 2.\n        if (canBeRevalidated(response)) {\n            ttl *= 2;\n        }\n\n        const body = await response.text();\n        const entry = {\n            policy: policy.toObject(),\n            body,\n        };\n\n        await cache.set(cacheKey, entry, {\n            ttl,\n        });\n\n        // We have to clone the response before returning it because the\n        // body can only be used once.\n        // To avoid https://github.com/bitinn/node-fetch/issues/151, we don't use\n        // response.clone() but create a new response from the consumed body\n        return new Response(flatStr(body), {\n            url: response.url,\n            status: response.status,\n            statusText: response.statusText,\n            headers: response.headers,\n        } as ResponseInit);\n    }\n};\n\n\nfunction canBeRevalidated(response: Response): boolean {\n    return response.headers.has('ETag');\n}\n\nfunction policyRequestFrom(request: Request) {\n    return {\n        url: request.url,\n        method: request.method,\n        headers: headersToObject(request.headers),\n    };\n}\n\nfunction policyResponseFrom(response: Response) {\n    return {\n        status: response.status,\n        headers: headersToObject(response.headers),\n    };\n}\n\nfunction headersToObject(headers: Headers) {\n    const object = Object.create(null);\n    headers?.forEach((val, key) => {\n        object[key] = val;\n    });\n    return object;\n}\n\nexport interface KeyValueCacheSetOptions {\n    /**\n     * Specified in **seconds**, the time-to-live (TTL) value limits the lifespan\n     * of the data being stored in the cache.\n     */\n    ttl?: number | null\n};\n\nexport interface KeyValueCache<V = any> {\n    get(key: string): Promise<V | undefined>;\n    set(key: string, value: V, options?: KeyValueCacheSetOptions): Promise<void>;\n    delete(key: string): Promise<boolean | void>;\n}\n"],"names":[],"mappings":"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"}